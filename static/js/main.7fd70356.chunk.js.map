{"version":3,"sources":["components/Elements.js","components/PatientTable.js","services/API.js","pages/PatientPage.js","index.js"],"names":["TableIcons","Add","forwardRef","props","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","PatientTable","patients","onUpdatePatients","data","Object","values","dataById","className","title","icons","columns","header","detailPanel","rowData","brief","visitCount","conditionList","map","c","onRowClick","event","togglePanel","options","showTitle","search","pageSize","pageSizeOptions","toolbar","columnsButton","a","axios","require","response","gender","race","ethnicity","stats","patient","genderList","raceList","ethnicityList","INIT_OPTIONS","age_min","age_max","isDeath","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","Age","Array","from","length","value","index","PatientPage","useState","isReady","setIsReady","setPatients","filterOptions","setFilterOptions","selectedOptions","setSelectedOptions","setStats","filteredStats","setFilteredStats","isReset","setIsReset","useEffect","getData","then","_patients","buildTable","catch","error","console","log","handleApplyChanges","patientsById","list","reduce","obj","personID","field","render","cellStyle","handleDatasetChange","e","target","url","URL","search_params","searchParams","temp","entries","filter","option","append","_gender","s","_race","_ethnicity","forEach","i","toString","new_url","get","handleUpdatePatients","toggle","buildForChart","chart","labels","male","female","count","total","r","b","keys","val","legend","display","position","tooltips","enabled","mode","callbacks","label","tooltipItems","datasets","toFixed","maintainAspectRatio","borderWidth","hoverBorderWidth","backgroundColor","fill","height","FormGroup","row","FormControl","variant","InputLabel","Select","onChange","MenuItem","input","Input","age","Button","onClick","CircularProgress","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7fd70356.chunk.js","sourcesContent":["import { forwardRef } from \"react\";\nimport {\n  AddBox,\n  ArrowDownward,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  SaveAlt,\n  Search,\n  ViewColumn\n} from \"@material-ui/icons\";\n\nexport const TableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n","import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { TableIcons } from \"../components/Elements\";\n\nconst PatientTable = ({ patients, onUpdatePatients }) => {\n  let data = Object.values(patients.dataById);\n  return (\n    <div className=\"table-container\">\n      <MaterialTable\n        title={false}\n        icons={TableIcons}\n        columns={patients.header}\n        data={data}\n        detailPanel={rowData => {\n          return (\n            <div className=\"detail text-sub-title\">\n              <div>{`전체 방문 수 : ${rowData.brief.visitCount}`}</div>\n              <br />\n              <div>{\"진단 정보\"}</div>\n              {rowData.brief.conditionList.map(c => (\n                <div>{`* ${c}`}</div>\n              ))}\n            </div>\n          );\n        }}\n        onRowClick={(event, rowData, togglePanel) => {\n          onUpdatePatients(togglePanel, rowData);\n        }}\n        options={{\n          showTitle: false,\n          search: false,\n          pageSize: 5,\n          pageSizeOptions: [5, 10, 15],\n          toolbar: false,\n          columnsButton: false\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PatientTable;\n","export async function getData() {\n  const axios = require(\"axios\");\n\n  let response = {\n    patients: null,\n    gender: null,\n    race: null,\n    ethnicity: null\n  };\n  let patients = await axios(\"http://49.50.167.136:9871/api/patient/list\");\n  let gender = await axios(\"http://49.50.167.136:9871/api/gender/list\");\n  let race = await axios(\"http://49.50.167.136:9871/api/race/list\");\n  let ethnicity = await axios(\"http://49.50.167.136:9871/api/ethnicity/list\");\n  let stats = await axios(\"http://49.50.167.136:9871/api/patient/stats\");\n\n  response.patients = patients.data.patient;\n  response.gender = gender.data.genderList;\n  response.race = race.data.raceList;\n  response.ethnicity = ethnicity.data.ethnicityList;\n  response.stats = stats.data.stats;\n  return response;\n}\n","import { useEffect, useState } from \"react\";\nimport PatientTable from \"../components/PatientTable\";\nimport {\n  FormControl,\n  FormGroup,\n  Button,\n  InputLabel,\n  MenuItem,\n  Select,\n  Input,\n  CircularProgress\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Pie } from \"react-chartjs-2\";\n\nimport { getData } from \"../services/API\";\n\nconst INIT_OPTIONS = {\n  gender: null,\n  age_min: null,\n  age_max: null,\n  race: null,\n  ethnicity: null,\n  isDeath: null\n};\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst Age = Array.from({ length: 150 }, (value, index) => index + 1);\n\nfunction PatientPage() {\n  const [isReady, setIsReady] = useState(false);\n  const [patients, setPatients] = useState({});\n  const [filterOptions, setFilterOptions] = useState({\n    gender: null,\n    age_min: null,\n    age_max: null,\n    race: null,\n    ethnicity: null,\n    isDeath: [true, false]\n  });\n  const [selectedOptions, setSelectedOptions] = useState(INIT_OPTIONS);\n  const [stats, setStats] = useState([]);\n  const [filteredStats, setFilteredStats] = useState([]);\n  const [isReset, setIsReset] = useState(false);\n\n  useEffect(() => {\n    getData()\n      .then(response => {\n        const _patients = buildTable(response.patients);\n        setPatients(_patients);\n        setFilterOptions({\n          ...filterOptions,\n          gender: response.gender,\n          race: response.race,\n          ethnicity: response.ethnicity\n        });\n        setStats(response.stats);\n        setFilteredStats(response.stats);\n      })\n      .then(() => setIsReady(true))\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (isReset) {\n      handleApplyChanges();\n      setIsReset(false);\n    }\n  }, [isReset]);\n\n  const buildTable = patients => {\n    let patientsById = patients.list.reduce((obj, patient) => {\n      obj[patient.personID] = patient;\n      return obj;\n    }, {});\n    let _patients = {};\n    _patients.header = [\n      { title: \"환자 ID\", field: \"personID\" },\n      {\n        title: \"성별\",\n        field: \"gender\",\n        render: patient => {\n          return patient.gender === \"M\" ? \"남자\" : \"여자\";\n        }\n      },\n      {\n        title: \"생년월일\",\n        field: \"birthDatetime\",\n        cellStyle: { width: \"20%\" }\n      },\n      { title: \"나이\", field: \"age\" },\n      { title: \"인종\", field: \"race\" },\n      { title: \"민족\", field: \"ethnicity\" },\n      {\n        title: \"사망 여부\",\n        field: \"isDeath\",\n        render: patient => {\n          return patient.isDeath ? \"사망\" : \"생존\";\n        }\n      }\n    ];\n    _patients.data = patients.list;\n    _patients.dataById = patientsById;\n\n    return _patients;\n  };\n\n  const handleDatasetChange = (e, value) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [value]: e.target.value\n    });\n  };\n\n  const handleApplyChanges = async () => {\n    let url = new URL(\"http://49.50.167.136:9871/api/patient/list\");\n    let search_params = url.searchParams;\n    let temp = stats;\n\n    Object.entries(selectedOptions).filter(option => option[1] !== null)\n      .length > 0\n      ? Object.entries(selectedOptions)\n          .filter(option => option[1] !== null)\n          .map(option => {\n            if (option[0] === \"isDeath\") {\n              search_params.append(\"death\", option[1]);\n            } else {\n              search_params.append(option[0], option[1]);\n              if (option[0] === \"gender\") {\n                let _gender = temp.filter(s => s[option[0]] === option[1]);\n                temp = _gender;\n              }\n              if (option[0] === \"race\") {\n                let _race = temp.filter(s => s[option[0]] === option[1]);\n                temp = _race;\n              }\n              if (option[0] === \"ethnicity\") {\n                let _ethnicity = temp.filter(s => s[option[0]] === option[1]);\n                temp = _ethnicity;\n              }\n            }\n          })\n          .forEach((a, i) => {\n            if (i === 0) {\n              setFilteredStats(temp);\n            }\n          })\n      : setFilteredStats(stats);\n\n    url.search = search_params.toString();\n    let new_url = url.toString();\n\n    let _patients = await axios.get(new_url);\n    _patients = buildTable(_patients.data.patient);\n    setPatients(_patients);\n  };\n\n  const handleUpdatePatients = async (toggle, rowData) => {\n    let brief = await axios.get(\n      `http://49.50.167.136:9871/api/patient/brief/${rowData.personID}`\n    );\n    brief = brief.data;\n\n    let obj = patients.dataById;\n    obj[rowData.personID] = {\n      ...obj[rowData.personID],\n      brief\n    };\n    setPatients({\n      ...patients,\n      dataById: obj,\n      data: Object.values(obj)\n    });\n    toggle();\n  };\n\n  const buildForChart = value => {\n    if (value === \"gender\") {\n      let chart = {\n        labels: [],\n        data: []\n      };\n      let male = 0;\n      let female = 0;\n      filteredStats.map(s => {\n        s.gender === \"M\" ? (male += s.count) : (female += s.count);\n      });\n      let total = male + female;\n\n      chart.labels = [\"남자\", \"여자\"];\n      chart.data = [(male / total) * 100, (female / total) * 100];\n\n      return chart;\n    } else if (value === \"race\") {\n      let chart = {\n        labels: [],\n        data: []\n      };\n      let _race = filterOptions.race?.reduce((obj, r) => {\n        obj[r] = 0;\n        return obj;\n      }, {});\n      filteredStats.map(s => {\n        _race[s.race] += s.count;\n      });\n      if (_race) {\n        let total = Object.values(_race).reduce((a, b) => a + b, 0);\n\n        chart.labels = Object.keys(_race);\n        chart.data = Object.values(_race).map(val => (val / total) * 100);\n      }\n\n      return chart;\n    } else if (value === \"ethnicity\") {\n      let chart = {\n        labels: [],\n        data: []\n      };\n      let _ethnicity = filterOptions.ethnicity?.reduce((obj, r) => {\n        obj[r] = 0;\n        return obj;\n      }, {});\n      filteredStats.map(e => {\n        _ethnicity[e.ethnicity] += e.count;\n      });\n      if (_ethnicity) {\n        let total = Object.values(_ethnicity).reduce((a, b) => a + b, 0);\n\n        chart.labels = Object.keys(_ethnicity);\n        chart.data = Object.values(_ethnicity).map(val => (val / total) * 100);\n      }\n\n      return chart;\n    }\n  };\n\n  const options = {\n    legend: {\n      display: true,\n      position: \"right\"\n    },\n    tooltips: {\n      enabled: true,\n      mode: \"single\",\n      callbacks: {\n        label: function (tooltipItems, data) {\n          let _data = data.datasets[0].data[tooltipItems.index].toFixed(1);\n          return _data + \"%\";\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n  const data = [\n    {\n      labels: buildForChart(\"gender\").labels,\n      datasets: [\n        {\n          labels: buildForChart(\"gender\").labels,\n          data: buildForChart(\"gender\").data,\n          borderWidth: 2,\n          hoverBorderWidth: 3,\n          backgroundColor: [\n            \"rgba(98, 181, 229, 1)\",\n            \"rgba(238, 102, 121, 1)\",\n            \"rgba(255, 198, 0, 1)\"\n          ],\n          fill: true\n        }\n      ]\n    },\n    {\n      labels: buildForChart(\"race\").labels,\n      datasets: [\n        {\n          labels: buildForChart(\"race\").labels,\n          data: buildForChart(\"race\").data,\n          borderWidth: 2,\n          hoverBorderWidth: 3,\n          backgroundColor: [\n            \"rgba(98, 181, 229, 1)\",\n            \"rgba(238, 102, 121, 1)\",\n            \"rgba(255, 198, 0, 1)\",\n            \"rgba(111, 86, 214, 1)\",\n            \"rgba(90, 214, 86, 1)\"\n          ],\n          fill: true\n        }\n      ]\n    },\n    {\n      labels: buildForChart(\"ethnicity\").labels,\n      datasets: [\n        {\n          labels: buildForChart(\"ethnicity\").labels,\n          data: buildForChart(\"ethnicity\").data,\n          borderWidth: 2,\n          hoverBorderWidth: 3,\n          backgroundColor: [\n            \"rgba(98, 181, 229, 1)\",\n            \"rgba(238, 102, 121, 1)\",\n            \"rgba(255, 198, 0, 1)\"\n          ],\n          fill: true\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"main\">\n      {isReady && (\n        <div className=\"container\">\n          <div className=\"text-title mb-20\">{\"환자 정보\"}</div>\n          <div className=\"chart-container\">\n            <div>\n              <Pie options={options} data={data[0]} height={150} />\n            </div>\n            <div>\n              <Pie options={options} data={data[1]} height={150} />\n            </div>\n            <div>\n              <Pie options={options} data={data[2]} height={150} />\n            </div>\n          </div>\n          <FormGroup\n            className=\"MuiFormGroup-options filter-form-container jc-fe\"\n            row\n          >\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>성별</InputLabel>\n              <Select\n                value={selectedOptions.gender || \"\"}\n                onChange={e => handleDatasetChange(e, \"gender\")}\n              >\n                {filterOptions.gender.map(gender => (\n                  <MenuItem value={gender}>\n                    {gender === \"M\" ? \"남자\" : \"여자\"}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>최소 나이</InputLabel>\n              <Select\n                value={selectedOptions.age_min || \"\"}\n                onChange={e => handleDatasetChange(e, \"age_min\")}\n                input={<Input />}\n                MenuProps={MenuProps}\n              >\n                {Age.map(age => (\n                  <MenuItem key={age} value={age}>\n                    {age}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>최대 나이</InputLabel>\n              <Select\n                value={selectedOptions.age_max || \"\"}\n                onChange={e => handleDatasetChange(e, \"age_max\")}\n                input={<Input />}\n                MenuProps={MenuProps}\n              >\n                {Age.map(age => (\n                  <MenuItem key={age} value={age}>\n                    {age}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>인종</InputLabel>\n              <Select\n                value={selectedOptions.race || \"\"}\n                onChange={e => handleDatasetChange(e, \"race\")}\n              >\n                {filterOptions.race.map(race => (\n                  <MenuItem value={race}>{race}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>민족</InputLabel>\n              <Select\n                value={selectedOptions.ethnicity || \"\"}\n                onChange={e => handleDatasetChange(e, \"ethnicity\")}\n              >\n                {filterOptions.ethnicity.map(ethnicity => (\n                  <MenuItem value={ethnicity}>{ethnicity}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className=\"filter-form \" variant=\"standard\">\n              <InputLabel>사망여부</InputLabel>\n              <Select\n                value={\n                  selectedOptions.isDeath !== null\n                    ? selectedOptions.isDeath\n                    : \"\"\n                }\n                onChange={e => handleDatasetChange(e, \"isDeath\")}\n              >\n                {filterOptions.isDeath.map(isDeath => (\n                  <MenuItem value={isDeath}>\n                    {isDeath === true ? \"사망\" : \"생존\"}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Button\n              className=\"reset-btn mr-20\"\n              onClick={() => {\n                setSelectedOptions(INIT_OPTIONS);\n                setIsReset(true);\n              }}\n            >\n              초기화\n            </Button>\n            <Button className=\"filter-btn\" onClick={handleApplyChanges}>\n              조회\n            </Button>\n          </FormGroup>\n          <PatientTable\n            patients={patients}\n            onUpdatePatients={handleUpdatePatients}\n          />\n        </div>\n      )}\n      {!isReady && (\n        <div className=\"main\">\n          <div className=\"loading\">\n            <CircularProgress />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PatientPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport PatientPage from \"./pages/PatientPage\";\n\nReactDOM.render(<PatientPage />, document.getElementById(\"root\"));\n"],"sourceRoot":""}